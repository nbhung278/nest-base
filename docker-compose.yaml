services:
  # app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: nestjs-app
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/nestjs_db?schema=public
  #     - NODE_ENV=development
  #     - CHOKIDAR_USEPOLLING=true
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   networks:
  #     - nestjs-network
  #   restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nestjs_db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - nestjs-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - nestjs-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: nbhung278@gmail.com
      PGADMIN_DEFAULT_PASSWORD: nbhung278
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - nestjs-network
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  redis_data:
    driver: local

networks:
  nestjs-network:
    driver: bridge
